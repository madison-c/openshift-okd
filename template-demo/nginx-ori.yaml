apiVersion: v1
kind: PersistentVolumeClaim
metadata:
 name: glusterfs-volums-nginx-data
spec:
 accessModes:
  - ReadWriteMany
 resources:
   requests:
        storage: 1Gi
 storageClassName: glusterfs-storage
---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  annotations:
    openshift.io/generated-by: OpenShiftNewApp
  creationTimestamp: null
  generation: 2
  labels:
    app: nginx
    template: nginx-template
  name: nginx
  namespace: cicd
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    deploymentconfig: nginx
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 0
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      annotations:
        openshift.io/generated-by: OpenShiftNewApp
      creationTimestamp: null
      labels:
        deploymentconfig: nginx
        app: nginx
    spec:
      containers:
      - image: docker-registry.default.svc:5000/cicd/nginx
        imagePullPolicy: IfNotPresent
        name: nginx
        ports:
        - containerPort: 80
          protocol: TCP
          initialDelaySeconds: 30
          periodSeconds: 10
        resources:
          limits:
            memory: 2Gi
          requests:
            memory: 512Mi
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: nginx-data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: nginx-data
        persistentVolumeClaim:
          claimName: glusterfs-volums-nginx-data
  test: false
  triggers:
  - type: ConfigChange
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
  creationTimestamp: null
  labels:
    name: nginx
  name: nginx
  namespace: cicd
spec:
  ports:
  - name: nginx
    port: 8081
    protocol: TCP
    targetPort: 80
  type: ClusterIP
  selector:
    app: nginx
